{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abrah\\\\abraham_vsCode\\\\appointment-planner-starting-v18\\\\src\\\\components\\\\contactForm\\\\ContactForm.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactForm = _ref => {\n  let {\n    name,\n    setName,\n    phone,\n    setPhone,\n    email,\n    setEmail,\n    handleSubmit\n  } = _ref;\n  const handlePhoneChange = event => {\n    const value = event.target.value;\n\n    // Regex pattern for a generic phone number\n    const phoneRegex = /^[0-9+\\(\\)#\\.\\s\\/ext-]+$/;\n\n    // Check if the input value matches the regex pattern\n    if (phoneRegex.test(value) || value === \"\") {\n      setPhone(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: name,\n        onChange: setName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"phone\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"phone\",\n        value: phone,\n        onChange: setPhone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"email\",\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"emai\",\n        value: email,\n        onChange: setEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactForm","_ref","name","setName","phone","setPhone","email","setEmail","handleSubmit","handlePhoneChange","event","value","target","phoneRegex","test","children","onSubmit","for","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/abrah/abraham_vsCode/appointment-planner-starting-v18/src/components/contactForm/ContactForm.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit,\r\n}) => {\r\nconst handlePhoneChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    // Regex pattern for a generic phone number\r\n    const phoneRegex = /^[0-9+\\(\\)#\\.\\s\\/ext-]+$/;\r\n\r\n    // Check if the input value matches the regex pattern\r\n    if (phoneRegex.test(value) || value === \"\") {\r\n      setPhone(value);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label for=\"name\">Name</label>\r\n        <input type=\"text\" id=\"name\" value={name} onChange={setName} />\r\n        <label for=\"phone\">Phone</label>\r\n        <input type=\"text\" id=\"phone\" value={phone} onChange={setPhone} />\r\n        <label for=\"email\">E-mail</label>\r\n        <input type=\"text\" id=\"emai\" value={email} onChange={setEmail} />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,MAAMC,WAAW,GAAGC,IAAA,IAQrB;EAAA,IARsB;IAC1BC,IAAI;IACJC,OAAO;IACPC,KAAK;IACLC,QAAQ;IACRC,KAAK;IACLC,QAAQ;IACRC;EACF,CAAC,GAAAP,IAAA;EACD,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IACjC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;;IAEhC;IACA,MAAME,UAAU,GAAG,0BAA0B;;IAE7C;IACA,IAAIA,UAAU,CAACC,IAAI,CAACH,KAAK,CAAC,IAAIA,KAAK,KAAK,EAAE,EAAE;MAC1CN,QAAQ,CAACM,KAAK,CAAC;IACjB;EACF,CAAC;EAGD,oBACEd,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA;MAAMmB,QAAQ,EAAER,YAAa;MAAAO,QAAA,gBAC3BlB,OAAA;QAAOoB,GAAG,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC9BxB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACZ,KAAK,EAAET,IAAK;QAACsB,QAAQ,EAAErB;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC/DxB,OAAA;QAAOoB,GAAG,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAChCxB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,OAAO;QAACZ,KAAK,EAAEP,KAAM;QAACoB,QAAQ,EAAEnB;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClExB,OAAA;QAAOoB,GAAG,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACjCxB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACZ,KAAK,EAAEL,KAAM;QAACkB,QAAQ,EAAEjB;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACjExB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAChC,iBACN;AAEP,CAAC;AAACI,EAAA,GAnCWzB,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}